{"version":3,"sources":["components/Header.jsx","components/CharacterCard.js","components/Spiner.js","App.js","index.js","img/logo.png","img/spinner.gif"],"names":["Header","getQuery","useState","characterName","setCharacterName","src","Logo","alt","type","placeholder","value","onChange","e","q","target","CharacterCard","character","img","name","birthday","nickname","portrayed","category","className","Spiner","spinner","App","characters","setCharacters","getCharacters","a","fetch","resp","json","data","console","log","useEffect","length","map","index","key","ReactDOM","render","document","getElementById","module","exports"],"mappings":"iPAyBeA,EApBA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACaC,mBAAS,IADtB,mBACtBC,EADsB,KACPC,EADO,KAQ7B,OACE,gCACI,yBAAKC,IAAKC,IAAMC,IAAI,KACpB,8BACI,2BAAOC,KAAK,OAAOC,YAAY,qBAC/BC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAXFC,EAWkBD,EAAEE,OAAOJ,MAV3CN,EAAiBS,QACjBZ,EAASY,GAFM,IAACA,QCqBLE,EAxBO,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAEbC,EAAsDD,EAAtDC,IAAIC,EAAkDF,EAAlDE,KAAMC,EAA4CH,EAA5CG,SAAUC,EAAkCJ,EAAlCI,SAAWC,EAAuBL,EAAvBK,UAAWC,EAAYN,EAAZM,SAEnD,OACE,yBAAKC,UAAU,QACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,cACf,yBAAKlB,IAAKY,GAAY,2GAA4GV,IAAI,MAE1I,yBAAKgB,UAAU,aACX,4BAAKL,GACL,6BACA,yCAAeE,GACf,sCAAYC,GACZ,yCAAeF,GACf,sCAAYG,O,gBCXTE,EANA,WACb,OACE,yBAAKD,UAAU,UAAUlB,IAAKoB,IAASlB,IAAI,uBCsChCmB,EAnCH,WAAO,IAAD,EAEmBxB,mBAAS,IAF5B,mBAETyB,EAFS,KAEEC,EAFF,KAKVC,EAAa,uCAAG,WAAMX,GAAN,iBAAAY,EAAA,sEAEAC,MAAMb,EAAI,6DAAyDA,GAAS,iDAF5E,cAEdc,EAFc,gBAIDA,EAAKC,OAJJ,OAIdC,EAJc,OAMpBN,EAAcM,GAEdC,QAAQC,IAAIF,GARQ,2CAAH,sDAenB,OAJAG,qBAAU,WACRR,MACA,IAGA,yBAAKN,UAAU,OACb,kBAAC,EAAD,CAAQtB,SAAU4B,IAClB,yBAAKN,UAAU,QACZI,EAAWW,OAAU,EACrBX,EAAWY,KAAI,SAACvB,EAAUwB,GAAX,OACd,kBAAC,EAAD,CAAexB,UAAWA,EAAWyB,IAAKD,OAEzC,kBAAC,EAAD,SCjCXE,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U,kBCJ/CC,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.6eefcb38.chunk.js","sourcesContent":["import React from 'react'\r\nimport Logo from '../img/logo.png'\r\nimport '../App.css'\r\nimport { useState } from 'react'\r\n\r\nconst Header = ({getQuery}) => {\r\n  const [characterName, setCharacterName] = useState('')\r\n\r\n  const onChange = (q) => {\r\n    setCharacterName(q)\r\n    getQuery(q)\r\n  }\r\n\r\n  return (\r\n    <header>\r\n        <img src={Logo} alt=\"\" />\r\n        <form>\r\n            <input type=\"text\" placeholder='Search a character' \r\n            value={characterName} \r\n            onChange={(e) => onChange(e.target.value) } />\r\n        </form>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport '../App.css'\r\n\r\n\r\n\r\nconst CharacterCard = ({character}) => {\r\n\r\n    const {img,name ,birthday, nickname , portrayed, category} = character\r\n\r\n  return (\r\n    <div className='card'>\r\n        <div className='card-inner'>\r\n            <div className='card-front'>\r\n            <img src={img ? img : 'https://vignette.wikia.nocookie.net/breaking-bad-tv/images/c/ce/Sp.png/revision/latest?cb=20121016143623'} alt=\"\" />\r\n        </div>\r\n        <div className='card-back'>\r\n            <h3>{name}</h3>\r\n            <hr />\r\n            <p>Nickname : {nickname}</p>\r\n            <p>Actor : {portrayed}</p>\r\n            <p>Birthday : {birthday}</p>\r\n            <p>Serie : {category}</p>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default CharacterCard","import React from 'react'\r\nimport spinner from '../img/spinner.gif'\r\nimport '../App.css'\r\n\r\nconst Spiner = () => {\r\n  return (\r\n    <img className='spinner' src={spinner} alt=\"spinner-animation\" />\r\n  )\r\n}\r\n\r\nexport default Spiner","import React from 'react'\r\nimport './App.css'\r\nimport Header from './components/Header'\r\nimport CharacterCard from './components/CharacterCard'\r\nimport { useState , useEffect } from 'react'\r\nimport Spiner from './components/Spiner'\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [characters,setCharacters] = useState([])\r\n  \r\n\r\n  const getCharacters = async(name) =>{\r\n\r\n    const resp =  await fetch(name ? `https://www.breakingbadapi.com/api/characters?name=${name}` : 'https://www.breakingbadapi.com/api/characters')\r\n\r\n    const data = await resp.json()\r\n    \r\n    setCharacters(data)\r\n\r\n    console.log(data);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    getCharacters()\r\n  },[])\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Header getQuery={getCharacters}/>\r\n      <div className='grid'>\r\n        {characters.length >  0 ? \r\n        (characters.map((character,index)=>(\r\n          <CharacterCard character={character} key={index} />\r\n        )))\r\n        : (<Spiner/>)}\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport  ReactDOM  from \"react-dom\";\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.3795f66d.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";"],"sourceRoot":""}